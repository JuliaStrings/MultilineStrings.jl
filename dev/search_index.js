var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = MultilineStrings","category":"page"},{"location":"#MultilineStrings","page":"Home","title":"MultilineStrings","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [MultilineStrings]","category":"page"},{"location":"#MultilineStrings.indent-Tuple{AbstractString,Int64}","page":"Home","title":"MultilineStrings.indent","text":"indent(str::AbstractString, n::Int)\n\nIndent each non-blank line by n spaces.\n\nExamples\n\njulia> indent(\"a\\nb\", 4)\n\"    a\\n    b\"\n\njulia> indent(\"  a\\n  \\n  b\", 2)\n\"    a\\n  \\n    b\"\n\nSee also Base.unindent and Base.indentation.\n\n\n\n\n\n","category":"method"},{"location":"#MultilineStrings.multiline-Tuple{AbstractString,AbstractString}","page":"Home","title":"MultilineStrings.multiline","text":"multiline(str, indicators) -> AbstractString\n\nManipulate a multiline string according to the provided style and chomp encoded in the indicators string.\n\nArguments\n\nstr::AbstractString: The multiline string to be processed\nindicators::AbstractString: A terse string representing the style and chomp. Indicators can be either in letter-form or in YAML-form:\n\"fs\" / \">-\": folded and strip\n\"fc\" / \">\": folded and clip\n\"fk\" / \">+\": folded and keep\n\"ls\" / \"|-\": literal and strip\n\"lc\" / \"|\": literal and clip\n\"lk\" / \"|+\": literal and keep\n\n\n\n\n\n","category":"method"},{"location":"#MultilineStrings.multiline-Tuple{AbstractString}","page":"Home","title":"MultilineStrings.multiline","text":"multiline(str; style=:folded, chomp=:strip) -> AbstractString\n\nManipulate a multiline string according to the provided style and chomp. Works similarly to YAML multiline strings (also known as block scalars).\n\nArguments\n\nstr::AbstractString: The multiline string to be processed\n\nKeywords\n\nstyle::Symbol: Replace newlines with spaces (:folded) or keep newlines (:literal)\nchomp::Symbol: No newlines at the end (:strip), single newline at the end (:clip), or keep all newlines from the end (:keep)\n\n\n\n\n\n","category":"method"},{"location":"#MultilineStrings.@m_str","page":"Home","title":"MultilineStrings.@m_str","text":"@m_str -> String\n\nManipulate a multiline string literal according to a style and chomp indicator (provided after the ending quote):\n\nStyle indicator:\nf replace newlines with spaces (folded, default)\nl keep newlines (literal)\nChomp indicator:\ns no newlines at the end (strip, default)\nc single newline at the end (clip)\nk keep all newlines from the end (keep)\n\nIf both a style and chomp indicator is provided the style indicator must be specified first.\n\nNote string interpolation is still respected any newlines added from interpolation will be also be processed.\n\nExamples\n\njulia> m\"\"\"\n       A string written\n       over multiple lines\n       \"\"\"\n\"A string written over multiple lines\"\n\n\n\n\n\n","category":"macro"}]
}
